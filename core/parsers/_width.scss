// Copyright (c) 2016-2017 Nicolas Morand (https://twitter.com/NicolasGraph)

// Distributed under the MIT licence (https://opensource.org/licenses/MIT).
// ------------------------------------------------------------------------
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

////
/// @group Misc
////

// 1. _elsass-valid-width
// ----------------------
/// Validates the $width mixin argument value.
///
/// @param {Number | String | List | Map} $gutter -
///   As defined through a mixin.
///
/// @return {Error | Map}

@function _elsass-valid-width($width) {
  $out: null;
  $first: nth($width, 1);

  @if type-of($width) == number {
    $out: ('width': $width);
  } @else if type-of($width) == list {
    @if length($width) >= 3 {
      $elsass-config: map-merge($elsass-config, ('cols': nth($width, 3))) !global;
    }
    @if length($width) == 2 or length($width) == 4 {
      $out: ('max-width': $first 'max');
    }
  } @else if type-of($width) == string {
    @if $width == 'max' {
      $out: ('max-width': $width);
    } @else {
      @return _elsass-error(
        '"#{$width}" is not a valid value for `$width`.',
        '',
        'The only valid string is: "max"'
      );
    }
  } @else if type-of($width) != number {
    $out: ('max-width': $first 'max');
  }
  
  @return $out;
}
