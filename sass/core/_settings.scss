// Copyright (c) 2016 Nicolas Morand (https://twitter.com/NicolasGraph)

// Distributed under the MIT licence (https://opensource.org/licenses/MIT).
// ------------------------------------------------------------------------
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

////
/// @group Config
////

// 1. BASE
// 1.1 elsass

// 1. BASE
// =======

// 1.1 elsass
// ----------
/// Media-queries agnostic and media-queries related settings.
/// @type Map
/// @prop {Map} global -
///   Media-queries agnostic settings.
/// @prop {Length} global.gutter -
///   Default gutter value.
/// @prop {Length} global.columns -
///   Default columns number.
/// @prop {Length} global.gutter-length -
///   (optional) Media-queries agnostic gutter length.
/// @prop {Length} global.container-max-width -
///   (optional) Media-queries agnostic related container max-width.
/// @prop {Map} responsive -
///   Media-queries related settings.
/// @prop {Map} responsive.bpt -
///   Map of a breakpoint related settings
///   where using the breakpoint name as key.
/// @prop {Length} responsive.bpt.device-min-width -
///   Breakpoint related media-query min-width
///   (also used to calculate the previous breakpoint max-width).  
///   This map item is useless for the smallest breakpoint.
/// @prop {Length} responsive.bpt.container-max-width -
///   (optional) Breakpoint related container max-width.
/// @prop {Length} responsive.bpt.gutter-length -
///   (optional) Breakpoint related gutter length.
$elsass: (
  'global': (                          // Media-queries agnostic settings.
    'columns'            : 12,         // Default columns number
    'gutter'             : 'all-over', // Default gutter value
    'gutter-length'      : null,       // Gutter length.
    'container-max-width': null,       // Max-width to optionally apply to containers.
  ),
  'responsive': (                   // Media-queries related settings.
    's': (                          // Custom breakpoint name.
      'container-max-width': 480px, // Max-width to optionally apply to containers.
      'gutter-length'      : 24px,  // Gutter length.
    ),
    'm': (
      'device-min-width'   : 640px, // Media-query min-width; useless for the first bpt.
      'container-max-width': 800px,
      'gutter-length'      : 32px,
    ),
    'l': (
      'device-min-width'   : 1024px,
      'container-max-width': 1000px,
      'gutter-length'      : 40px,
    ),
    'xl': (
      'device-min-width'   : 1440px,
      'container-max-width': 1280px,
      'gutter-length'      : 48px,
    )
  )
) !default;

$elsass-advanced: (
  'gutter': (
    'before'  : ('out': 'no' 'no' 'no' 1),
    'after'   : ('out': 'no' 1 'no' 'no'),
    'outside' : ('out': 'no' .5),
    'all-out' : ('out': .5),
    'start'   : ('in' : 'no' 'no' 'no' 1),
    'end'     : ('in' : 'no' 1 'no' 'no'),
    'inside'  : ('in' : 'no' .5),
    'all-in'  : ('in' : .5),
    'all-over': ('in' : .5, 'out': .5)
  ),
  'behaviour': (
    'silent'   : ('silent'),
    'nest'     : ('out': 'in' -1),
    'collapse' : ('in' : 0, 'out': 0),
    'overlay'  : ('out': 'out' -1),
    'is-prefix': ('in' : ('right': 0), 'out': ('right': 'out' -1)),
    'is-suffix': ('in' : ('left': 0), 'out': ('left': 'out' -1)),
    'affix'    : ('in' : ('right': 0, 'left': 0),
                  'out': ('right': 'out' -1, 'left': 'out' -1))
  )
) !default;;
