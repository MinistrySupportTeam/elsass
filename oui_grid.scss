$layout: (
    s: (
        content-max-width : 480px,
        horizontal-spacing: 15px,
        vertical-spacing  : 10px
    ),
    m: (
        device-min-width  : 640px,
        content-max-width : 690px,
        horizontal-spacing: 20px,
        vertical-spacing  : 15px
    ),
    l: (
        device-min-width  : 1024px,
        content-max-width : 1000px,
        horizontal-spacing: 25px,
        vertical-spacing  : 20px
    ),
    xl: (
        device-min-width  : 1366px,
        content-max-width : 1280px,
        horizontal-spacing: 30px,
        vertical-spacing  : 25px
    )
);

@function missing-medias($media) {
    $medias: map-keys($layout);
    $from-index: 1;
    $to-index: length($medias);

    @if $media {
        $from-index: index($medias, nth($media, 1)) + 1;

        @if type-of($media) == list {
            $to-index: index($medias, nth($media, 2)) - 1;
        }
    }

    $missing-medias: null;
    @if $to-index - $from-index >= 0 {
        @for $index from $from-index through $to-index {
            $missing-medias: nth($medias, $index);
        }
    }

    @return $missing-medias;
}

@mixin container($media: null, $flex-flow: null, $use-max-width: null, $margin: null, $padding: null) {

    // Get media related variables.
    $medias: map-keys($layout);
    $from-media: null;
    $min-width: null;
    $max-width: null;

    @if $media {
        $from-media: map-get($layout, nth($media, 1));
        $min-width: if(map-has-key($from-media, device-min-width), map-get($from-media, device-min-width), null);
        @if type-of($media) == list {
            $to-media: map-get($layout, nth($media, 2));
            $max-width: map-get($to-media, device-min-width);
        }
    } @else {
        $from-media: map-get($layout, nth($medias, 1));
    }

    > * { box-sizing: border-box; }

    // Generate CSS.
    @include breakpoint($min-width, $max-width) {
        display: flex;

        @if $flex-flow {
            flex-flow: $flex-flow;
        }

        @if $use-max-width {
            $max-width: map-get($from-media, content-max-width);
            max-width: $max-width;
        }

        @content;
    }

    // Add missing medias related values.
    // Add missing medias.
    @if ($media) {
        $missing-medias: missing-medias($media);

        @if $missing-medias {
            @each $missing-media in $missing-medias {
                $index: index($medias, $missing-media);
                $media: map-get($layout, $missing-media);

                @if $index != length($medias) {
                    $missing-media: $missing-media nth($medias, $index + 1);
                }

                @include container($missing-media, false, $use-max-width, $margin, $padding);
            }
        }
    }
}

@mixin breakpoint($min-width: null, $max-width: null) {
    @if $min-width and $max-width {
        @media screen and (min-width: $min-width) and (max-width: calc(#{$max-width} - 1px)) {
            @content;
        }
    } @else if $min-width {
        @media screen and (min-width: $min-width) {
            @content;
        }
    } @else if $max-width {
        @media screen and (max-width: $max-width) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin items($media: null, $col-width: null, $margin: null, $padding: null) {
    $items: length($col-width);
    @for $item from 1 through $items {
        > :nth-child(#{$items}n+#{$item}) {
            @include item($media, nth($col-width, $item), $margin, $padding) {
                @content
            };
        }
    }
}

@mixin item($media: null, $col-width: null, $margin: null, $padding: null) {

    // Get media related variables.
    $medias: map-keys($layout);
    $from-media: null;
    $min-width: null;
    $max-width: null;

    @if $media {
        $from-media: map-get($layout, nth($media, 1));
        $min-width: if(map-has-key($from-media, device-min-width), map-get($from-media, device-min-width), null);
        @if type-of($media) == list {
            $to-media: map-get($layout, nth($media, 2));
            $max-width: map-get($to-media, device-min-width);
        }
    } @else {
        $from-media: map-get($layout, nth($medias, 1));
    }

    // Build margin related variables.
    $horizontal-spacing: null;
    $vertical-spacing: null;
    $calc-margins: 0;

    @if $margin {
        $horizontal-spacing: map-get($from-media, horizontal-spacing);
        $vertical-spacing: map-get($from-media, vertical-spacing);

        @if type-of($margin) == list {
            @if length($margin) == 2 and nth($margin, 1) != nth($margin, 2) {
                $margin: nth($margin, 1) nth($margin, 2) nth($margin, 1) nth($margin, 2);
            } @else if length($margin) == 4 and nth($margin, 1) != (nth($margin, 2) or nth($margin, 3) or nth($margin, 4)) {
                $margin: nth($margin, 1) nth($margin, 2) nth($margin, 3) nth($margin, 4);
            }
        } @else {
            $margin: nth($margin, 1) nth($margin, 1) nth($margin, 1) nth($margin, 1)
        }
        @each $value in (nth($margin, 2), nth($margin, 4)) {
            @if $value == true {
                $calc-margins: $calc-margins + 1;
            }
        }
    }

    // Generate css
    $values-order: "top", "right", "bottom", "left";

    @include breakpoint($min-width, $max-width) {

        // Generate css width.
        @if $col-width {
            @if $margin {
                width: calc(#{$col-width} * 100% - #{$calc-margins} * #{$horizontal-spacing});
            } @else {
                width: $col-width * 100%;
            }
        }

        // Generate css margin.
        $index: 1;
        @each $value in $margin {

            @if $value == true {
                $value: if($index == 2 or $index == 4, $horizontal-spacing, $vertical-spacing);
                margin-#{nth($values-order, $index)}: $value;
            } @else if $value == auto {
                margin-#{nth($values-order, $index)}: $value;
            }
            $index: $index + 1;
        }

        @content;
    }

    // Add missing medias.
    @if ($media) {
        $missing-medias: missing-medias($media);

        @if $missing-medias {
            @each $missing-media in $missing-medias {
                $index: index($medias, $missing-media);
                $media: map-get($layout, $missing-media);

                @if $index != length($medias) {
                    $missing-media: $missing-media nth($medias, $index + 1);
                }

                @include item($missing-media, false, $margin, $padding);
            }
        }
    }
}
